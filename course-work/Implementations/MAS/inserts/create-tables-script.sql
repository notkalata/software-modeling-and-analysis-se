USE BOOKING;

CREATE TABLE USERS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    PHONE_NUMBER VARCHAR(20) NOT NULL
);

CREATE TABLE HOTELS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    CITY VARCHAR(255) NOT NULL,
    COUNTRY VARCHAR(100) NOT NULL,
    REVIEW_RATING INT NOT NULL DEFAULT 0,
    DESCRIPTION VARCHAR(1000) NOT NULL
);

CREATE TABLE ROOMS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    HOTEL_ID INT NOT NULL,
    ROOM_TYPE VARCHAR(100) NOT NULL,
    PRICE_PER_NIGHT DECIMAL(10, 2) NOT NULL,
    AVAILABLE CHAR(1) CHECK (AVAILABLE IN ('Y', 'N')) NOT NULL,
    MAX_OCCUPANCY INT NOT NULL DEFAULT 1,
    ALLOW_CHILDREN CHAR(1) CHECK (ALLOW_CHILDREN IN ('Y', 'N')) NOT NULL,
    ALLOW_PETS CHAR(1) CHECK (ALLOW_PETS IN ('Y', 'N')) NOT NULL,
	CONSTRAINT FK_ROOM_HOTEL FOREIGN KEY (HOTEL_ID) REFERENCES HOTELS(ID)
);

CREATE TABLE BOOKINGS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_ID INT NOT NULL,
    ROOM_ID INT NOT NULL,
    CHECK_IN_DATE DATE DEFAULT CAST(GETDATE() AS DATE) NOT NULL,
    CHECK_OUT_DATE DATE DEFAULT CAST(GETDATE() AS DATE) NOT NULL,
	ADDITIONAL_INFORMATION VARCHAR(1000),
	TOTAL_PRICE DECIMAL(5, 2),
    BOOKING_STATUS VARCHAR(15) CHECK (BOOKING_STATUS IN ('Pending', 'Completed', 'Cancelled')) DEFAULT 'Pending' NOT NULL,
	CONSTRAINT FK_BOOKING_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT FK_BOOKING_ROOM FOREIGN KEY (ROOM_ID) REFERENCES ROOMS(ID)
);

CREATE TABLE PAYMENTS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    BOOKING_ID INT UNIQUE NOT NULL,
    USER_ID INT NOT NULL,
    PAID_ON DATETIME DEFAULT GETDATE() NOT NULL,
	STATUS VARCHAR(20) CHECK (STATUS IN ('PROCESSED', 'UNPROCESSED')) DEFAULT 'UNPROCESSED' NOT NULL
	CONSTRAINT FK_PAYMENT_BOOKING FOREIGN KEY (BOOKING_ID) REFERENCES BOOKINGS(ID),
	CONSTRAINT FK_PAYMENT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE REVIEWS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_ID INT NOT NULL,
    HOTEL_ID INT NOT NULL,
    RATING INT NOT NULL,
    REVIEW_TEXT VARCHAR(255) NOT NULL,
    WRITTEN_ON DATETIME DEFAULT GETDATE() NOT NULL,
	CONSTRAINT FK_REVIEW_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT FK_REVIEW_HOTEL FOREIGN KEY (HOTEL_ID) REFERENCES HOTELS(ID)
);

CREATE TABLE EXTRAS (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL
);

CREATE TABLE HOTEL_EXTRAS (
    HOTEL_ID INT NOT NULL,
    EXTRA_ID INT NOT NULL,
    AVAILABLE_IN_SUMMER CHAR(1) CHECK (AVAILABLE_IN_SUMMER IN ('Y', 'N')) NOT NULL,
    AVAILABLE_IN_WINTER CHAR(1) CHECK (AVAILABLE_IN_WINTER IN ('Y', 'N')) NOT NULL,
	CONSTRAINT FK_HXTRA_HOTEL FOREIGN KEY (HOTEL_ID) REFERENCES HOTELS(ID),
	CONSTRAINT FK_HXTRA_EXTRA FOREIGN KEY (EXTRA_ID) REFERENCES EXTRAS(ID),
	CONSTRAINT PK_HotelExtra PRIMARY KEY (HOTEL_ID, EXTRA_ID)
);